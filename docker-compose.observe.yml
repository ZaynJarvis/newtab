# Docker Compose for Observability Stack
# Monitoring and logging infrastructure for New Tab application
# Run with: docker-compose -f docker-compose.observe.yml up -d
services:
  # Container metrics collection
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: newtab-cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    networks:
      - monitoring

  # Metrics collection and storage
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: newtab-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - monitoring
    depends_on:
      - cadvisor

  # Visualization and dashboards
  grafana:
    image: grafana/grafana:10.0.0
    container_name: newtab-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring
    depends_on:
      - prometheus

  # Log aggregation (optional)
  loki:
    image: grafana/loki:2.8.0
    container_name: newtab-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./config/loki:/etc/loki
      - loki_data:/loki
    networks:
      - monitoring

  # Log collection agent
  promtail:
    image: grafana/promtail:2.8.0
    container_name: newtab-promtail
    restart: unless-stopped
    volumes:
      - ./logs:/var/log/newtab:ro
      - ./config/promtail:/etc/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      - loki

  # Node metrics (system-level monitoring)
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: newtab-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge
    name: monitoring
    external: true

volumes:
  prometheus_data:
    name: newtab-prometheus-data
  grafana_data:
    name: newtab-grafana-data
  loki_data:
    name: newtab-loki-data
